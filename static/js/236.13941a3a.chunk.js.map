{"version":3,"file":"static/js/236.13941a3a.chunk.js","mappings":"gSAYaA,EAET,SAAAC,GAAU,IAAD,MACLC,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAuBA,EAAMC,kBAAkBC,gBAClEC,GAAWC,EAAAA,EAAAA,MAGjB,GAA0CC,EAAAA,EAAAA,UAAiB,GAA3D,eAAOC,EAAP,KAAsBC,EAAtB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,GAAIV,EAAKW,UAAYZ,EAAMa,YAAYC,KAAM,CAC3C,IAAMC,EAASd,EAAKW,SAASI,SAAQ,SAAAC,GAAO,OAC1CA,EAAQC,aAAaC,QACnB,SAAAC,GAAE,OAAIA,EAAGN,KAAKO,QAAUrB,EAAMa,YAAYC,KAAKO,YAEjDN,OACFL,EAAiBK,EAAS,EAAIA,EAAS,MAExC,CAACd,EAAMD,EAAMa,eAGd,iCACE,SAAC,IAAD,CAASS,MAAM,cAAf,UACE,SAAC,IAAD,oBAAMtB,EAAMa,YAAYU,YAAxB,aAAM,EAAwBC,SAEhC,SAAC,IAAD,CAAcC,MAAO,CAAEC,OAAQ,EAAGC,QAAS,EAAGC,YAAa,MAC3D,SAAC,IAAD,CAASN,MAAM,kDAAf,SACGb,GACC,SAAC,IAAD,CACEoB,KAAK,OACLC,QAzBmB,kBAC3BxB,EAASyB,EAAAA,GAAmC/B,EAAMa,YAAYC,QAyBtDW,MAAO,CAAEC,OAAQ,EAAGC,QAAS,GAH/B,UAKE,SAAC,IAAD,CAAOK,MAAOvB,EAAewB,MAAM,QAAnC,UACE,SAAC,IAAD,CAAKA,MAAM,QAAX,mBAAoBjC,EAAMa,YAAYC,YAAtC,aAAoB,EAAwBO,aAIhD,SAAC,IAAD,oBAAMrB,EAAMa,YAAYC,YAAxB,aAAM,EAAwBO,cAOxC","sources":["components/pullrequests/BranchInfo.tsx"],"sourcesContent":["import { LeftOutlined } from \"@ant-design/icons\";\nimport { Badge, Button, Tag, Tooltip } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IPullRequest } from \"../../model/pullrequest.model\";\nimport { IRootState } from \"../../service\";\nimport * as layoutService from \"../../service/layout.service\";\n\ninterface IBranchInfo {\n  pullRequest: IPullRequest;\n}\n\nexport const BranchInfo: React.FC<\n  IBranchInfo\n> = props => {\n  const data = useSelector((store: IRootState) => store.pullrequestFilter.filteredData);\n  const dispatch = useDispatch();\n  const openCrossPullRequest = () =>\n    dispatch(layoutService.openHeadBranchDrawer(props.pullRequest.head));\n  const [crossPRNumber, setCrossPRNumber] = useState<number>(0);\n\n  useEffect(() => {\n    if (data.projects && props.pullRequest.head) {\n      const length = data.projects.flatMap(project =>\n        project.pullRequests.filter(\n          pr => pr.head.label === props.pullRequest.head.label\n        )\n      ).length;\n      setCrossPRNumber(length > 1 ? length : 0);\n    }\n  }, [data, props.pullRequest]);\n\n  return (\n    <>\n      <Tooltip title=\"Base branch\">\n        <Tag>{props.pullRequest.base?.ref}</Tag>\n      </Tooltip>\n      <LeftOutlined style={{ margin: 0, padding: 0, marginRight: 5 }} />\n      <Tooltip title=\"Head branch. Click to see Cross-PR information.\">\n        {crossPRNumber ? (\n          <Button\n            type=\"link\"\n            onClick={openCrossPullRequest}\n            style={{ margin: 0, padding: 0 }}\n          >\n            <Badge count={crossPRNumber} color=\"green\">\n              <Tag color=\"green\">{props.pullRequest.head?.label}</Tag>\n            </Badge>\n          </Button>\n        ) : (\n          <Tag>{props.pullRequest.head?.label}</Tag>\n        )}\n      </Tooltip>\n    </>\n  );\n};\n\nexport default BranchInfo;\n"],"names":["BranchInfo","props","data","useSelector","store","pullrequestFilter","filteredData","dispatch","useDispatch","useState","crossPRNumber","setCrossPRNumber","useEffect","projects","pullRequest","head","length","flatMap","project","pullRequests","filter","pr","label","title","base","ref","style","margin","padding","marginRight","type","onClick","layoutService","count","color"],"sourceRoot":""}