{"version":3,"file":"static/js/560.ca000b19.chunk.js","mappings":"+OAMMA,EAAeC,EAAAA,MAAW,kBAAM,iCAOzBC,EAAoC,SAAAC,GAC/C,OAAkCC,EAAAA,EAAAA,UAAmB,IAArD,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAkB,GAAhD,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAuBA,EAAMF,KAAKA,QA2B3D,OAzBAG,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACdJ,GAAW,GACPC,EAAKI,UAAL,UAAiBV,EAAMW,oBAAvB,OAAiB,EAAoBC,SACvCT,EACEH,EAAMW,aACHE,SAAQ,SAAAC,GAAE,OACTA,EAAGC,OAAOC,KAAI,SAAAC,GAEZ,OADAA,EAAMC,YAAcJ,EACbG,QAGVE,MAAK,SAACC,EAAWC,GAAZ,OACH,OAADD,QAAC,IAADA,GAAAA,EAAGE,MAAH,OAAWD,QAAX,IAAWA,GAAAA,EAAGC,KACVF,EAAEE,KAAKC,oBAAsBF,EAAEC,KAAKC,qBACjC,EACDH,EAAEE,KAAKC,oBAAsBF,EAAEC,KAAKC,oBACpC,EACA,EACF,MAGVlB,GAAW,MAEZ,CAACC,EAAMN,EAAMW,gBAGd,SAAC,EAAAa,SAAD,CAAUC,UAAU,SAAC,KAAD,CAAMrB,SAAO,IAAjC,UACE,SAAC,KAAD,CACEsB,UAAU,qBACVC,WAAW,WACXC,WAAY1B,EACZE,QAASA,EACTyB,WAAY,SAAAZ,GAAK,OACf,SAACpB,EAAD,CAEEoB,MAAOA,EACPa,YAAa9B,EAAM8B,aAFdb,EAAMc,UAUvB","sources":["components/checks/ChecksList.tsx"],"sourcesContent":["import { List } from \"antd\";\nimport React, { Suspense, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ICheck } from \"../../model/check.model\";\nimport { IPullRequest } from \"../../model/pullrequest.model\";\nimport { IRootState } from \"../../service\";\nconst CheckElement = React.lazy(() => import(\"./CheckElement\"));\n\ninterface IChecksList {\n  pullRequests: IPullRequest[];\n  showProject?: boolean;\n}\n\nexport const ChecksList: React.FC<IChecksList> = props => {\n  const [checkList, setCheckList] = useState<ICheck[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const data = useSelector((store: IRootState) => store.data.data);\n\n  useEffect(() => {\n    setLoading(true);\n    if (data.projects && props.pullRequests?.length) {\n      setCheckList(\n        props.pullRequests\n          .flatMap(pr =>\n            pr.checks.map(check => {\n              check.pullRequest = pr;\n              return check;\n            })\n          )\n          .sort((a: ICheck, b: ICheck) =>\n            a?.name && b?.name\n              ? a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()\n                ? -1\n                : a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()\n                ? 1\n                : 0\n              : 0\n          )\n      );\n      setLoading(false);\n    }\n  }, [data, props.pullRequests]);\n\n  return (\n    <Suspense fallback={<List loading />}>\n      <List\n        className=\"demo-loadmore-list\"\n        itemLayout=\"vertical\"\n        dataSource={checkList}\n        loading={loading}\n        renderItem={check => (\n          <CheckElement\n            key={check.id}\n            check={check}\n            showProject={props.showProject}\n          />\n        )}\n      />\n    </Suspense>\n  );\n};\n\nexport default ChecksList;\n"],"names":["CheckElement","React","ChecksList","props","useState","checkList","setCheckList","loading","setLoading","data","useSelector","store","useEffect","projects","pullRequests","length","flatMap","pr","checks","map","check","pullRequest","sort","a","b","name","toLocaleLowerCase","Suspense","fallback","className","itemLayout","dataSource","renderItem","showProject","id"],"sourceRoot":""}