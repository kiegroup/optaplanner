{"version":3,"file":"static/js/243.244f3d02.chunk.js","mappings":"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","sources":["components/checks/CheckIconFactory.tsx","components/pullrequests/PullRequestCheckTag.tsx","components/pullrequests/PullRequestStatistics.tsx"],"sourcesContent":["import {\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n  MinusCircleOutlined,\n  SyncOutlined\n} from \"@ant-design/icons\";\nimport React from \"react\";\nimport { ICheck } from \"../../model/check.model\";\nimport { CHECKS } from \"../../shared/constants\";\n\ninterface ICheckIconFactory {\n  check?: ICheck;\n  conclusion?: string;\n  status?: string;\n  size?: number;\n}\n\nexport const CheckIconFactory: React.FC<ICheckIconFactory> = props => {\n  const conclusionToSwitch = props.check?.conclusion ?? props.conclusion ?? \"\";\n  const statusToSwitch = props.check?.status ?? props.status ?? \"\";\n  switch (conclusionToSwitch) {\n    case CHECKS.CONCLUSION.SUCCESS:\n      return (\n        <CheckCircleOutlined\n          style={{ fontSize: props.size ?? 14, color: \"#70cf41\" }}\n        />\n      );\n    case CHECKS.CONCLUSION.FAILURE:\n      return (\n        <CloseCircleOutlined\n          style={{ fontSize: props.size ?? 14, color: \"#ff6b6d\" }}\n        />\n      );\n    case CHECKS.CONCLUSION.CANCELLED:\n    case CHECKS.CONCLUSION.SKIPPED:\n      return (\n        <MinusCircleOutlined\n          style={{ fontSize: props.size ?? 14, color: \"#faad14\" }}\n        />\n      );\n    case CHECKS.CONCLUSION.PENDING:\n      return (\n        <SyncOutlined\n          style={{ fontSize: props.size ?? 14, color: \"#42a5ff\" }}\n          spin\n        />\n      );\n    default:\n      switch (statusToSwitch) {\n        case CHECKS.STATUS.IN_PROGRESS:\n        case CHECKS.STATUS.QUEUED:\n          return (\n            <SyncOutlined\n              style={{ fontSize: props.size ?? 14, color: \"#42a5ff\" }}\n              spin\n            />\n          );\n        default:\n          return null;\n      }\n  }\n};\n\nexport default CheckIconFactory;\n","import { Tag, Tooltip } from \"antd\";\nimport React from \"react\";\n\ninterface IPullRequestCheckTag {\n  title?: string;\n  value: number;\n  color: string;\n  icon?: React.ReactNode;\n  showZero?: boolean;\n}\nexport const PullRequestCheckTag: React.FC<IPullRequestCheckTag> = props =>\n  props.showZero || props.value > 0 ? (\n    props.title ? (\n      <Tooltip placement=\"top\" title={props.title}>\n        <Tag color={props.color} icon={props.icon}>\n          {props.value}\n        </Tag>\n      </Tooltip>\n    ) : (\n      <Tag color={props.color} icon={props.icon}>\n        {props.value}\n      </Tag>\n    )\n  ) : null;\n\nexport default PullRequestCheckTag;\n","import { EyeOutlined } from \"@ant-design/icons\";\nimport { Button, Skeleton, Tooltip } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ICheck } from \"../../model/check.model\";\nimport { IPullRequest } from \"../../model/pullrequest.model\";\nimport * as layoutService from \"../../service/layout.service\";\nimport { CHECKS } from \"../../shared/constants\";\nimport CheckIconFactory from \"../checks/CheckIconFactory\";\nimport PullRequestCheckTag from \"./PullRequestCheckTag\";\n\ninterface IPullRequestStatistics {\n  pullRequests: IPullRequest[];\n}\nexport const PullRequestStatistics: React.FC<\n  IPullRequestStatistics\n> = props => {\n  const dispatch = useDispatch();\n  const openChecksDrawer = (pullRequests: IPullRequest[]) =>\n    dispatch(layoutService.openChecksDrawer(pullRequests));\n  const [successPullRequests, setSuccessPullRequests] = useState<\n    IPullRequest[]\n  >([]);\n  const [failurePullRequests, setFailurePullRequests] = useState<\n    IPullRequest[]\n  >([]);\n  const [runningPullRequests, setRunningPullRequests] = useState<\n    IPullRequest[]\n  >([]);\n  const [skipPullRequests, setSkipPullRequests] = useState<IPullRequest[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const filterPullRequests = (\n    pullRequests: IPullRequest[],\n    filter: (check: ICheck) => boolean\n  ): IPullRequest[] =>\n    pullRequests.reduce((acc: IPullRequest[], pr: IPullRequest) => {\n      const pullRequest: IPullRequest = { ...pr };\n      pullRequest.checks = pr.checks.filter(filter);\n      if (pullRequest.checks.length) {\n        acc.push(pullRequest);\n      }\n      return acc;\n    }, []);\n\n  useEffect(() => {\n    setLoading(true);\n    if (props.pullRequests.length) {\n      setSuccessPullRequests(\n        filterPullRequests(\n          props.pullRequests,\n          check => check.conclusion === CHECKS.CONCLUSION.SUCCESS\n        )\n      );\n      setFailurePullRequests(\n        filterPullRequests(\n          props.pullRequests,\n          check => check.conclusion === CHECKS.CONCLUSION.FAILURE\n        )\n      );\n      setRunningPullRequests(\n        filterPullRequests(\n          props.pullRequests,\n          check =>\n            check.status !== undefined &&\n            [CHECKS.STATUS.IN_PROGRESS, CHECKS.STATUS.QUEUED].includes(\n              check.status\n            )\n        )\n      );\n      setSkipPullRequests(\n        filterPullRequests(\n          props.pullRequests,\n          check =>\n            check.conclusion !== undefined &&\n            [CHECKS.CONCLUSION.SKIPPED, CHECKS.CONCLUSION.CANCELLED].includes(\n              check.conclusion\n            )\n        )\n      );\n    }\n    setLoading(false);\n  }, [props.pullRequests]);\n\n  const CheckButton = (props: {\n    pullRequests: IPullRequest[];\n    titlePreffix: string;\n    children: any;\n  }) => (\n    <Tooltip\n      title={`${props.titlePreffix} Get Check Details (${\n        props.pullRequests.flatMap(pr => pr.checks).length\n      })`}\n    >\n      <Button\n        type=\"link\"\n        style={{ padding: 0, margin: 0 }}\n        onClick={() => openChecksDrawer(props.pullRequests)}\n      >\n        {props.children}\n      </Button>\n    </Tooltip>\n  );\n\n  return loading ? (\n    <Skeleton.Input style={{ width: 150 }} />\n  ) : (\n    <>\n      <CheckButton\n        pullRequests={successPullRequests}\n        titlePreffix=\"Number of success checks. \"\n      >\n        <PullRequestCheckTag\n          value={successPullRequests.flatMap(pr => pr.checks).length}\n          color=\"success\"\n          icon={<CheckIconFactory conclusion={CHECKS.CONCLUSION.SUCCESS} />}\n        />\n      </CheckButton>\n      <CheckButton\n        pullRequests={failurePullRequests}\n        titlePreffix=\"Number of failure checks. \"\n      >\n        <PullRequestCheckTag\n          value={failurePullRequests.flatMap(pr => pr.checks).length}\n          color=\"error\"\n          icon={<CheckIconFactory conclusion={CHECKS.CONCLUSION.FAILURE} />}\n        />\n      </CheckButton>\n      <CheckButton\n        pullRequests={runningPullRequests}\n        titlePreffix=\"Number of running/queued checks. \"\n      >\n        <PullRequestCheckTag\n          value={runningPullRequests.flatMap(pr => pr.checks).length}\n          color=\"processing\"\n          icon={<CheckIconFactory status={CHECKS.STATUS.IN_PROGRESS} />}\n        />\n      </CheckButton>\n      <CheckButton\n        pullRequests={skipPullRequests}\n        titlePreffix=\"Number of skipped/aborted checks. \"\n      >\n        <PullRequestCheckTag\n          value={skipPullRequests.flatMap(pr => pr.checks).length}\n          color=\"warning\"\n          icon={<CheckIconFactory conclusion={CHECKS.CONCLUSION.CANCELLED} />}\n        />\n      </CheckButton>\n\n      {props.pullRequests.flatMap(pr => pr.checks).length ? (\n        <CheckButton pullRequests={props.pullRequests} titlePreffix=\"\">\n          <EyeOutlined />\n        </CheckButton>\n      ) : null}\n    </>\n  );\n};\n\nexport default PullRequestStatistics;\n"],"names":["props","conclusionToSwitch","check","conclusion","statusToSwitch","status","CHECKS","style","fontSize","size","color","spin","showZero","value","title","placement","icon","PullRequestStatistics","dispatch","useDispatch","useState","successPullRequests","setSuccessPullRequests","failurePullRequests","setFailurePullRequests","runningPullRequests","setRunningPullRequests","skipPullRequests","setSkipPullRequests","loading","setLoading","filterPullRequests","pullRequests","filter","reduce","acc","pr","pullRequest","checks","length","push","useEffect","undefined","includes","CheckButton","titlePreffix","flatMap","type","padding","margin","onClick","layoutService","children","width"],"sourceRoot":""}