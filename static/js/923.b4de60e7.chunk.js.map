{"version":3,"file":"static/js/923.b4de60e7.chunk.js","mappings":"4PAKMA,EAAaC,EAAAA,MAAW,kBAAM,wDAIvBC,EAAwC,SAAAC,GACnD,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAuBA,EAAMC,OAAOC,gBAE/D,OACE,SAAC,IAAD,CACEC,MAAK,0BACHL,EAAOM,aAAaC,SAAQ,SAAAC,GAAE,OAAIA,EAAGC,UAAQC,OAD1C,KAGLC,UAAU,QACVC,KAAK,QACLC,QAVY,kBAAMf,EAASgB,EAAAA,OAW3BC,QAASf,EAAOe,QAPlB,UASE,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAACvB,EAAD,CAAYY,aAAcN,EAAOM,aAAcY,aAAa,SAMpE","sources":["components/checks/ChecksDrawer.tsx"],"sourcesContent":["import { Drawer, Skeleton } from \"antd\";\nimport React, { Suspense } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IRootState } from \"../../service\";\nimport * as layoutService from \"../../service/layout.service\";\nconst ChecksList = React.lazy(() => import(\"./ChecksList\"));\n\ninterface IChecksDrawer {}\n\nexport const ChecksDrawer: React.FC<IChecksDrawer> = props => {\n  const dispatch = useDispatch();\n  const onClose = () => dispatch(layoutService.closeChecksDrawer());\n  const drawer = useSelector((store: IRootState) => store.layout.checksDrawer);\n\n  return (\n    <Drawer\n      title={`Checks details (${\n        drawer.pullRequests.flatMap(pr => pr.checks).length\n      })`}\n      placement=\"right\"\n      size=\"large\"\n      onClose={onClose}\n      visible={drawer.visible}\n    >\n      <Suspense fallback={<Skeleton />}>\n        <ChecksList pullRequests={drawer.pullRequests} showProject={true} />\n      </Suspense>\n    </Drawer>\n  );\n};\n\nexport default ChecksDrawer;\n"],"names":["ChecksList","React","ChecksDrawer","props","dispatch","useDispatch","drawer","useSelector","store","layout","checksDrawer","title","pullRequests","flatMap","pr","checks","length","placement","size","onClose","layoutService","visible","Suspense","fallback","showProject"],"sourceRoot":""}