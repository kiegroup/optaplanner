{"version":3,"file":"static/js/266.c82073ff.chunk.js","mappings":"8PAMMA,EAAWC,EAAAA,MAAW,kBAAM,wDAGrBC,EAAwB,SAAAC,GACnC,IAAMC,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAuBA,EAAMC,UAAUC,gBAGhE,OAFgBH,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAuBA,EAAMG,SAASC,YAGhE,SAAC,IAAD,KAEA,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,CACEC,MAAO,CAAEC,UAAW,KACpBC,WAAYX,EAAKY,KACjBC,WAAY,SAAAC,GAAG,OAAI,SAAClB,EAAD,CAA6CkB,IAAKA,GAAlD,qBAA4BC,EAAAA,EAAAA,IAASD,WAMhE","sources":["components/jobs/List.tsx"],"sourcesContent":["import { List as AntdList, Skeleton } from \"antd\";\nimport React, { Suspense } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { IRootState } from \"../../service\";\nimport Loading from \"../shared/Loading\";\nimport { getJobId } from \"../../utils/id.utils\";\nconst ListItem = React.lazy(() => import(\"./ListItem\"));\ninterface IList {}\n\nexport const List: React.FC<IList> = props => {\n  const data = useSelector((store: IRootState) => store.jobFilter.filteredData);\n  const loading = useSelector((store: IRootState) => store.jobsData.loading);\n\n  return loading ? (\n    <Skeleton />\n  ) : (\n    <Suspense fallback={<Loading />}>\n      <AntdList\n        style={{ minHeight: 700 }}\n        dataSource={data.jobs}\n        renderItem={job => <ListItem key={`list_item_${getJobId(job)}`} job={job} />}\n      />\n    </Suspense>\n  );\n};\n\nexport default List;\n"],"names":["ListItem","React","List","props","data","useSelector","store","jobFilter","filteredData","jobsData","loading","Suspense","fallback","style","minHeight","dataSource","jobs","renderItem","job","getJobId"],"sourceRoot":""}