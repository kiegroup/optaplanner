{"version":3,"file":"static/js/763.2d328d10.chunk.js","mappings":"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","sources":["../../../node_modules/@ant-design/icons-svg/es/asn/RocketOutlined.js","../../../node_modules/@ant-design/icons/es/icons/RocketOutlined.js","components/shared/BuildStatisticErrorIndexByJob.tsx","components/shared/StatisticBuilds.tsx","components/jobs/Header.tsx","components/shared/BuildsStatisticErrorIndex.tsx","components/shared/StatisticDate.tsx","../../../node_modules/@ant-design/icons-svg/es/asn/CloudSyncOutlined.js","../../../node_modules/@ant-design/icons/es/icons/CloudSyncOutlined.js"],"sourcesContent":["// This icon file is generated automatically.\nvar RocketOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M864 736c0-111.6-65.4-208-160-252.9V317.3c0-15.1-5.3-29.7-15.1-41.2L536.5 95.4C530.1 87.8 521 84 512 84s-18.1 3.8-24.5 11.4L335.1 276.1a63.97 63.97 0 00-15.1 41.2v165.8C225.4 528 160 624.4 160 736h156.5c-2.3 7.2-3.5 15-3.5 23.8 0 22.1 7.6 43.7 21.4 60.8a97.2 97.2 0 0043.1 30.6c23.1 54 75.6 88.8 134.5 88.8 29.1 0 57.3-8.6 81.4-24.8 23.6-15.8 41.9-37.9 53-64a97 97 0 0043.1-30.5 97.52 97.52 0 0021.4-60.8c0-8.4-1.1-16.4-3.1-23.8H864zM762.3 621.4c9.4 14.6 17 30.3 22.5 46.6H700V558.7a211.6 211.6 0 0162.3 62.7zM388 483.1V318.8l124-147 124 147V668H388V483.1zM239.2 668c5.5-16.3 13.1-32 22.5-46.6 16.3-25.2 37.5-46.5 62.3-62.7V668h-84.8zm388.9 116.2c-5.2 3-11.2 4.2-17.1 3.4l-19.5-2.4-2.8 19.4c-5.4 37.9-38.4 66.5-76.7 66.5-38.3 0-71.3-28.6-76.7-66.5l-2.8-19.5-19.5 2.5a27.7 27.7 0 01-17.1-3.5c-8.7-5-14.1-14.3-14.1-24.4 0-10.6 5.9-19.4 14.6-23.8h231.3c8.8 4.5 14.6 13.3 14.6 23.8-.1 10.2-5.5 19.6-14.2 24.5zM464 400a48 48 0 1096 0 48 48 0 10-96 0z\" } }] }, \"name\": \"rocket\", \"theme\": \"outlined\" };\nexport default RocketOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport RocketOutlinedSvg from \"@ant-design/icons-svg/es/asn/RocketOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar RocketOutlined = function RocketOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: RocketOutlinedSvg\n  }));\n};\n\nRocketOutlined.displayName = 'RocketOutlined';\nexport default /*#__PURE__*/React.forwardRef(RocketOutlined);","import { Col, Row, Typography } from \"antd\";\nimport { TooltipPlacement } from \"antd/lib/tooltip\";\nimport React from \"react\";\nimport { IJob } from \"../../model/job.model\";\nimport BuildStatisticErrorIndex from \"./BuildsStatisticErrorIndex\";\nimport JobLink from \"./JobLink\";\n\ninterface IBuildStatisticErrorIndexByJob {\n  jobs: IJob[];\n  placement?: TooltipPlacement;\n}\nexport const BuildStatisticErrorIndexByJob: React.FC<\n  IBuildStatisticErrorIndexByJob\n> = props => {\n  return (\n    <>\n      {props.jobs.map(job => (\n        <Row key={job.id} gutter={[16, 16]}>\n          <Col flex=\"none\">\n            <Typography.Text ellipsis={true} style={{ fontWeight: \"bold\" }}>\n              <JobLink job={job} />\n            </Typography.Text>\n          </Col>\n          <Col flex=\"auto\" style={{ textAlign: \"end\" }}>\n            <BuildStatisticErrorIndex\n              builds={job.builds}\n              size={12}\n              placement={props.placement}\n            />\n          </Col>\n        </Row>\n      ))}\n    </>\n  );\n};\n\nexport default BuildStatisticErrorIndexByJob;\n","import { RocketOutlined } from \"@ant-design/icons\";\nimport { Col, Row, Statistic, Typography } from \"antd\";\nimport { TooltipPlacement } from \"antd/lib/tooltip\";\nimport React from \"react\";\nimport { IJob } from \"../../model/job.model\";\nimport { STATISTICS_STYLE } from \"../../shared/constants\";\nimport JobLink from \"./JobLink\";\n\ninterface IStaticJobs {\n  jobs: IJob[];\n  size?: number;\n  placement?: TooltipPlacement;\n}\nexport const StaticJobs: React.FC<IStaticJobs> = props => {\n  const fontSizeStyle = props.size\n    ? { fontSize: props.size }\n    : STATISTICS_STYLE;\n\n  return (\n    <>\n      {props.jobs.map(job => (\n        <Row key={job.id} gutter={[16, 16]}>\n          <Col flex=\"none\">\n            <Typography.Text ellipsis={true} style={{ fontWeight: \"bold\" }}>\n              <JobLink job={job} />\n            </Typography.Text>\n          </Col>\n          <Col flex=\"auto\" style={{ textAlign: \"end\" }}>\n            <Statistic\n              prefix={<RocketOutlined />}\n              value={job.builds.length}\n              valueStyle={fontSizeStyle}\n            />\n          </Col>\n        </Row>\n      ))}\n    </>\n  );\n};\n\nexport default StaticJobs;\n","import {\n  CloudSyncOutlined,\n  InfoCircleOutlined,\n  LinkOutlined,\n  RocketOutlined\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Card,\n  Col,\n  Modal,\n  PageHeader,\n  Popover,\n  Row,\n  Skeleton,\n  Statistic,\n  Tooltip,\n  Typography\n} from \"antd\";\nimport moment from \"moment\";\nimport React, { Suspense, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IBuild } from \"../../model/build.model\";\nimport { IRootState } from \"../../service\";\nimport * as jobDataService from \"../../service/jobs-data.service\";\nimport { APP_TIMESTAMP_FORMAT, STATISTICS_STYLE } from \"../../shared/constants\";\nimport BuildStatisticErrorIndex from \"../shared/BuildsStatisticErrorIndex\";\nimport BuildStatisticErrorIndexByJob from \"../shared/BuildStatisticErrorIndexByJob\";\nimport Loading from \"../shared/Loading\";\nimport StaticJobs from \"../shared/StatisticBuilds\";\nimport StatisticDate from \"../shared/StatisticDate\";\nconst ReloadButton = React.lazy(() => import(\"../shared/ReloadButton\"));\n\nconst ProjectStatusInformation = React.lazy(\n  () => import(\"../shared/ProjectStatusInformation\")\n);\n\ninterface IHeader {}\nexport const Header: React.FC<IHeader> = props => {\n  const dispatch = useDispatch();\n  const data = useSelector((store: IRootState) => store.jobFilter.filteredData);\n  const loading = useSelector((store: IRootState) => store.data.loading);\n  const [latestLoad, setLatestLoad] = useState<Date>(new Date());\n  const [totalBuilds, setTotalBuilds] = useState<IBuild[]>([]);\n\n  const selectedProduct = useSelector(\n    (store: IRootState) => store.product.selectedProduct\n  );\n\n  const loadData = () => {\n    if (selectedProduct?.folder) {\n      dispatch(\n        jobDataService.loadData(`${selectedProduct?.folder}/latest.json`)\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (data?.jobs) {\n      setLatestLoad(new Date());\n      setTotalBuilds(data.jobs.flatMap(e => e.builds));\n    } else {\n      setTotalBuilds([]);\n    }\n  }, [data]);\n\n  const infoModal = () =>\n    Modal.info({\n      content: (\n        <Suspense fallback={<Skeleton />}>\n          <ProjectStatusInformation />\n        </Suspense>\n      ),\n      onOk() {},\n      width: 1000,\n      centered: true\n    });\n  return (\n    <Card style={{ margin: 24, marginTop: 10 }}>\n      <PageHeader\n        title={\n          data.metadata?.title ? (\n            <Typography.Title level={2} style={{ marginBottom: 18 }}>\n              {data.metadata?.title}\n            </Typography.Title>\n          ) : (\n            <Skeleton.Input style={{ width: 200, marginBottom: 15 }} />\n          )\n        }\n        subTitle={\n          data.metadata?.subtitle ?? <Skeleton.Input style={{ width: 400 }} />\n        }\n        style={{ padding: 0 }}\n        extra={[\n          <Suspense\n            key=\"header_reload_button\"\n            fallback={<Skeleton.Input style={{ width: 100 }} />}\n          >\n            <ReloadButton reloadAction={loadData} loading={loading} />\n          </Suspense>,\n          <Tooltip key=\"header_info\" title=\"Show project status information\">\n            <Button\n              key=\"info\"\n              type=\"text\"\n              shape=\"circle\"\n              icon={<InfoCircleOutlined />}\n              onClick={infoModal}\n            />\n          </Tooltip>\n        ]}\n      >\n        <Row gutter={16}>\n          <Col>\n            <Statistic\n              title=\"Generated By\"\n              value={data.metadata?.createdBy}\n              valueStyle={STATISTICS_STYLE}\n              suffix={\n                data.metadata?.createdUrl ? (\n                  <Tooltip title=\"Visit job generating the report\">\n                    <Button\n                      type=\"link\"\n                      href={data.metadata?.createdUrl}\n                      target=\"_blank\"\n                      icon={<LinkOutlined />}\n                      style={{\n                        padding: 0,\n                        ...STATISTICS_STYLE,\n                        fontWeight: \"bold\"\n                      }}\n                    />\n                  </Tooltip>\n                ) : null\n              }\n            />\n          </Col>\n          <Col>\n            <Popover\n              content={\n                <Suspense fallback={<Loading />}>\n                  <StaticJobs jobs={data.jobs} size={12} />\n                </Suspense>\n              }\n              placement=\"bottom\"\n            >\n              <Statistic\n                title=\"Number of Jobs\"\n                prefix={<RocketOutlined />}\n                value={data.jobs.length}\n                valueStyle={{ ...STATISTICS_STYLE, fontWeight: \"bold\" }}\n              />\n            </Popover>\n          </Col>\n          <Col>\n            <Popover\n              content={\n                <Suspense fallback={<Loading />}>\n                  <StaticJobs jobs={data.jobs} size={12} />\n                </Suspense>\n              }\n              placement=\"bottom\"\n            >\n              <Statistic\n                title=\"Number of Builds\"\n                prefix={<CloudSyncOutlined />}\n                value={totalBuilds.length}\n                valueStyle={STATISTICS_STYLE}\n              />\n            </Popover>\n          </Col>\n          <Col>\n            <BuildStatisticErrorIndex\n              title=\"Error Index\"\n              builds={totalBuilds}\n              placement=\"bottom\"\n              popoverContent={\n                <Suspense fallback={<Loading />}>\n                  <BuildStatisticErrorIndexByJob jobs={data.jobs} />\n                </Suspense>\n              }\n            />\n          </Col>\n          <Col>\n            <Suspense fallback={<Loading style={{ fontSize: 16 }} />}>\n              <StatisticDate\n                date={\n                  data.metadata?.date\n                    ? moment(new Date(Date.parse(data.metadata?.date))).format(\n                        APP_TIMESTAMP_FORMAT\n                      )\n                    : undefined\n                }\n                text=\"Creation Date\"\n              />\n            </Suspense>\n          </Col>\n          <Col>\n            <Suspense fallback={<Loading style={{ fontSize: 16 }} />}>\n              <StatisticDate\n                date={moment(latestLoad).format(APP_TIMESTAMP_FORMAT)}\n                text=\"Latest Load\"\n              />\n            </Suspense>\n          </Col>\n        </Row>\n      </PageHeader>\n    </Card>\n  );\n};\n\nexport default Header;\n","import { InfoCircleOutlined } from \"@ant-design/icons\";\nimport { Popover, Statistic, Tooltip } from \"antd\";\nimport { RenderFunction, TooltipPlacement } from \"antd/lib/tooltip\";\nimport React, { useEffect, useState } from \"react\";\nimport { IBuild } from \"../../model/build.model\";\nimport { COLOURS, STATISTICS_STYLE } from \"../../shared/constants\";\nimport { calculateErrorIndex } from \"../../utils/job.utils\";\n\ninterface IBuildStatisticErrorIndex {\n  title?: string;\n  builds: IBuild[];\n  popoverContent?: React.ReactNode | RenderFunction;\n  size?: number;\n  placement?: TooltipPlacement;\n}\nexport const BuildStatisticErrorIndex: React.FC<\n  IBuildStatisticErrorIndex\n> = props => {\n  const [errorIndex, setErrorIndex] = useState<number | undefined>(undefined);\n  const [color, setColor] = useState<string>(COLOURS.GREEN);\n  const fontSizeStyle = props.size\n    ? { fontSize: props.size }\n    : STATISTICS_STYLE;\n\n  useEffect(() => {\n    if (props.builds?.length) {\n      const value = calculateErrorIndex(props.builds);\n      setErrorIndex(value);\n      setColor(value <= 20 ? COLOURS.GREEN : COLOURS.RED);\n    } else {\n      setErrorIndex(undefined);\n      setColor(COLOURS.GREEN);\n    }\n  }, [props.builds]);\n\n  return props.popoverContent ? (\n    <Popover content={props.popoverContent} placement={props.placement}>\n      <Statistic\n        prefix={\n          <Tooltip title=\"This index is calculated by n_failures/n_checks\">\n            <InfoCircleOutlined style={{ fontSize: 12 }} />\n          </Tooltip>\n        }\n        title={props.title}\n        value={errorIndex}\n        precision={2}\n        valueStyle={{\n          ...fontSizeStyle,\n          color,\n          fontWeight: \"bold\"\n        }}\n        suffix=\"%\"\n      />\n    </Popover>\n  ) : (\n    <Statistic\n      title={props.title}\n      value={errorIndex}\n      precision={2}\n      valueStyle={{\n        ...fontSizeStyle,\n        color,\n        fontWeight: \"bold\"\n      }}\n      suffix=\"%\"\n    />\n  );\n};\n\nexport default BuildStatisticErrorIndex;\n","import { Statistic, Tooltip } from \"antd\";\nimport React from \"react\";\nimport { STATISTICS_STYLE } from \"../../shared/constants\";\n\ninterface IStatisticDate {\n  date?: string;\n  text: string;\n  tooltipTitle?: string;\n}\nexport const StatisticDate: React.FC<IStatisticDate> = props => {\n  return props.tooltipTitle ? (\n    <Tooltip title={props.tooltipTitle}>\n      <Statistic\n        title={props.text}\n        loading={!props.date}\n        valueStyle={STATISTICS_STYLE}\n        value={props.date ? props.date.toLocaleString() : undefined}\n      />\n    </Tooltip>\n  ) : (\n    <Statistic\n      title={props.text}\n      loading={!props.date}\n      valueStyle={STATISTICS_STYLE}\n      value={props.date ? props.date.toLocaleString() : undefined}\n    />\n  );\n};\n\nexport default StatisticDate;\n","// This icon file is generated automatically.\nvar CloudSyncOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M811.4 368.9C765.6 248 648.9 162 512.2 162S258.8 247.9 213 368.8C126.9 391.5 63.5 470.2 64 563.6 64.6 668 145.6 752.9 247.6 762c4.7.4 8.7-3.3 8.7-8v-60.4c0-4-3-7.4-7-7.9-27-3.4-52.5-15.2-72.1-34.5-24-23.5-37.2-55.1-37.2-88.6 0-28 9.1-54.4 26.2-76.4 16.7-21.4 40.2-36.9 66.1-43.7l37.9-10 13.9-36.7c8.6-22.8 20.6-44.2 35.7-63.5 14.9-19.2 32.6-36 52.4-50 41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.3c19.9 14 37.5 30.8 52.4 50 15.1 19.3 27.1 40.7 35.7 63.5l13.8 36.6 37.8 10c54.2 14.4 92.1 63.7 92.1 120 0 33.6-13.2 65.1-37.2 88.6-19.5 19.2-44.9 31.1-71.9 34.5-4 .5-6.9 3.9-6.9 7.9V754c0 4.7 4.1 8.4 8.8 8 101.7-9.2 182.5-94 183.2-198.2.6-93.4-62.7-172.1-148.6-194.9z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M376.9 656.4c1.8-33.5 15.7-64.7 39.5-88.6 25.4-25.5 60-39.8 96-39.8 36.2 0 70.3 14.1 96 39.8 1.4 1.4 2.7 2.8 4.1 4.3l-25 19.6a8 8 0 003 14.1l98.2 24c5 1.2 9.9-2.6 9.9-7.7l.5-101.3c0-6.7-7.6-10.5-12.9-6.3L663 532.7c-36.6-42-90.4-68.6-150.5-68.6-107.4 0-195 85.1-199.4 191.7-.2 4.5 3.4 8.3 8 8.3H369c4.2-.1 7.7-3.4 7.9-7.7zM703 664h-47.9c-4.2 0-7.7 3.3-8 7.6-1.8 33.5-15.7 64.7-39.5 88.6-25.4 25.5-60 39.8-96 39.8-36.2 0-70.3-14.1-96-39.8-1.4-1.4-2.7-2.8-4.1-4.3l25-19.6a8 8 0 00-3-14.1l-98.2-24c-5-1.2-9.9 2.6-9.9 7.7l-.4 101.4c0 6.7 7.6 10.5 12.9 6.3l23.2-18.2c36.6 42 90.4 68.6 150.5 68.6 107.4 0 195-85.1 199.4-191.7.2-4.5-3.4-8.3-8-8.3z\" } }] }, \"name\": \"cloud-sync\", \"theme\": \"outlined\" };\nexport default CloudSyncOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloudSyncOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloudSyncOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloudSyncOutlined = function CloudSyncOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloudSyncOutlinedSvg\n  }));\n};\n\nCloudSyncOutlined.displayName = 'CloudSyncOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloudSyncOutlined);"],"names":["RocketOutlined","props","ref","React","AntdIcon","_objectSpread","icon","RocketOutlinedSvg","displayName","jobs","map","job","gutter","flex","ellipsis","style","fontWeight","JobLink","textAlign","builds","size","placement","id","fontSizeStyle","fontSize","STATISTICS_STYLE","prefix","value","length","valueStyle","ReloadButton","ProjectStatusInformation","Header","dispatch","useDispatch","data","useSelector","store","jobFilter","filteredData","loading","useState","Date","latestLoad","setLatestLoad","totalBuilds","setTotalBuilds","selectedProduct","product","useEffect","flatMap","e","margin","marginTop","title","metadata","level","marginBottom","width","subTitle","subtitle","padding","extra","Suspense","fallback","reloadAction","folder","jobDataService","type","shape","InfoCircleOutlined","onClick","Modal","content","onOk","centered","createdBy","suffix","createdUrl","href","target","LinkOutlined","Loading","CloudSyncOutlined","popoverContent","StatisticDate","date","moment","parse","format","APP_TIMESTAMP_FORMAT","undefined","text","errorIndex","setErrorIndex","COLOURS","color","setColor","calculateErrorIndex","precision","tooltipTitle","toLocaleString","CloudSyncOutlinedSvg"],"sourceRoot":""}