{"version":3,"file":"static/js/116.93a8fe4b.chunk.js","mappings":"qQAEA,EADqB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,urBAA2rB,KAAQ,SAAU,MAAS,Y,UCM92BA,EAAiB,SAAwBC,EAAOC,GAClD,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,GAAIJ,GAAQ,GAAI,CAC5FC,IAAKA,EACLI,KAAMC,MAIVP,EAAeQ,YAAc,iBAC7B,MAA4BL,EAAAA,WAAiBH,G,qECJhCS,EAAwC,SAAAR,GACnD,IAAMS,GAAWC,EAAAA,EAAAA,MACjB,GACEC,EAAAA,EAAAA,WAAkB,GADpB,eAAOC,EAAP,KAAmCC,EAAnC,KAEMC,GAAkBC,EAAAA,EAAAA,KACtB,SAACC,GAAD,OAAuBA,EAAMC,QAAQH,mBAEjCI,GAAUH,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAuBA,EAAMC,QAAQC,WAC3DC,GAAOJ,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAuBA,EAAMC,QAAQE,SAE9DC,EAAAA,EAAAA,YAAU,WACR,GAAIF,GAAWJ,EAAiB,CAAC,IAAD,QACxBO,EAA0B,4BAC3BF,EAAKG,YADsB,QACd,KADc,iBAE3BH,EAAKI,uBAFsB,QAEH,KAC3BC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,KAAOZ,EAAgBY,MAC3CC,EAA6B,4BAC9BT,EAAQI,YADsB,QACd,KADc,iBAE9BJ,EAAQK,uBAFsB,QAEH,KAC9BC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,KAAOZ,EAAgBY,MAE/CC,GAA8BN,GAC9BA,EAAwBO,OAASD,EAA2BC,OAE5Df,GAA8B,GAC9BgB,EAAAA,GAAAA,KACE,sFAIL,CAACV,EAAMD,EAASJ,KAEnBM,EAAAA,EAAAA,YAAU,WACR,IAAKR,EAA4B,CAC/B,IAAMkB,EAAWC,aAAY,WAC3BtB,EAASuB,EAAAA,QACR,KACH,OAAO,WACLC,cAAcH,OAGjB,CAACrB,EAAUK,EAAiBK,EAAMP,IAQrC,OACE,SAAC,IAAD,CAEEsB,MACEtB,EACI,qIACA,kJALR,UAQE,SAAC,IAAD,CAAOuB,IAAKvB,EAAZ,UACE,SAAC,IAAD,CAEEwB,KAAK,UACL/B,MAAM,SAAC,EAAD,IACNgC,QAASrC,EAAMqC,QACfC,QArBO,WACb7B,EAASuB,EAAAA,MACTnB,GAA8B,GAC9Bb,EAAMuC,gBAaF,mBACM,oBATJ,WAsBV","sources":["../../../node_modules/@ant-design/icons-svg/es/asn/ReloadOutlined.js","../../../node_modules/@ant-design/icons/es/icons/ReloadOutlined.js","components/shared/ReloadButton.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar ReloadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M909.1 209.3l-56.4 44.1C775.8 155.1 656.2 92 521.9 92 290 92 102.3 279.5 102 511.5 101.7 743.7 289.8 932 521.9 932c181.3 0 335.8-115 394.6-276.1 1.5-4.2-.7-8.9-4.9-10.3l-56.7-19.5a8 8 0 00-10.1 4.8c-1.8 5-3.8 10-5.9 14.9-17.3 41-42.1 77.8-73.7 109.4A344.77 344.77 0 01655.9 829c-42.3 17.9-87.4 27-133.8 27-46.5 0-91.5-9.1-133.8-27A341.5 341.5 0 01279 755.2a342.16 342.16 0 01-73.7-109.4c-17.9-42.4-27-87.4-27-133.9s9.1-91.5 27-133.9c17.3-41 42.1-77.8 73.7-109.4 31.6-31.6 68.4-56.4 109.3-73.8 42.3-17.9 87.4-27 133.8-27 46.5 0 91.5 9.1 133.8 27a341.5 341.5 0 01109.3 73.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.6 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c-.1-6.6-7.8-10.3-13-6.2z\" } }] }, \"name\": \"reload\", \"theme\": \"outlined\" };\nexport default ReloadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ReloadOutlinedSvg from \"@ant-design/icons-svg/es/asn/ReloadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ReloadOutlined = function ReloadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ReloadOutlinedSvg\n  }));\n};\n\nReloadOutlined.displayName = 'ReloadOutlined';\nexport default /*#__PURE__*/React.forwardRef(ReloadOutlined);","import { ReloadOutlined } from \"@ant-design/icons\";\nimport { Badge, Button, message, Tooltip } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IRootState } from \"../../service\";\nimport * as productService from \"../../service/product.service\";\n\ninterface IReloadButton {\n  reloadAction: () => void;\n  loading: boolean;\n}\nexport const ReloadButton: React.FC<IReloadButton> = props => {\n  const dispatch = useDispatch();\n  const [newProductVersionAvailable, setNewProductVersionAvailable] =\n    useState<boolean>(false);\n  const selectedProduct = useSelector(\n    (store: IRootState) => store.product.selectedProduct\n  );\n  const predata = useSelector((store: IRootState) => store.product.predata);\n  const data = useSelector((store: IRootState) => store.product.data);\n\n  useEffect(() => {\n    if (predata && selectedProduct) {\n      const selectedProductFromData = [\n        ...data.jobs ?? [],\n        ...data.projectStatuses ?? []\n      ].find(project => project.id === selectedProduct.id);\n      const selectedProductFromPreData = [\n        ...predata.jobs ?? [],\n        ...predata.projectStatuses ?? []\n      ].find(project => project.id === selectedProduct.id);\n      if (\n        selectedProductFromPreData && selectedProductFromData &&\n        selectedProductFromData.date !== selectedProductFromPreData.date\n      ) {\n        setNewProductVersionAvailable(true);\n        message.info(\n          \"A new product information available, click on Reload button whenever you want.\"\n        );\n      }\n    }\n  }, [data, predata, selectedProduct]);\n\n  useEffect(() => {\n    if (!newProductVersionAvailable) {\n      const interval = setInterval(() => {\n        dispatch(productService.preloadData());\n      }, 30000);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [dispatch, selectedProduct, data, newProductVersionAvailable]);\n\n  const reload = () => {\n    dispatch(productService.loadData());\n    setNewProductVersionAvailable(false);\n    props.reloadAction();\n  };\n\n  return (\n    <Tooltip\n      key=\"reload\"\n      title={\n        newProductVersionAvailable\n          ? \"Reload information from service. The data is asynchronously generated, A NEW DATA HAS BEEN PRODUCED and it's ready to be consumed.\"\n          : \"Reload information from service. The data is asynchronously generated, this reloading mechanism is in case you know new data has been produced.\"\n      }\n    >\n      <Badge dot={newProductVersionAvailable}>\n        <Button\n          key=\"reload-button\"\n          type=\"primary\"\n          icon={<ReloadOutlined />}\n          loading={props.loading}\n          onClick={reload}\n        >\n          Reload\n        </Button>\n      </Badge>\n    </Tooltip>\n  );\n};\n\nexport default ReloadButton;\n"],"names":["ReloadOutlined","props","ref","React","AntdIcon","_objectSpread","icon","ReloadOutlinedSvg","displayName","ReloadButton","dispatch","useDispatch","useState","newProductVersionAvailable","setNewProductVersionAvailable","selectedProduct","useSelector","store","product","predata","data","useEffect","selectedProductFromData","jobs","projectStatuses","find","project","id","selectedProductFromPreData","date","message","interval","setInterval","productService","clearInterval","title","dot","type","loading","onClick","reloadAction"],"sourceRoot":""}